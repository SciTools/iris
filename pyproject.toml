[build-system]
# Defined by PEP 518
requires = [
  "setuptools>=64",
  "setuptools_scm[toml]>=7.0",
  "wheel",
]
# Defined by PEP 517
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Iris Contributors", email = "scitools.pub@gmail.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Visualization",
]
dynamic = [
    "dependencies",
    "readme",
    "version",
]
description = "A powerful, format-agnostic, community-driven Python package for analysing and visualising Earth science data"
keywords = [
    "cf-metadata",
    "data-analysis",
    "earth-science",
    "grib",
    "netcdf",
    "meteorology",
    "oceanography",
    "space-weather",
    "ugrid",
    "visualisation",
]
license = {text = "BSD-3-Clause"}
name = "scitools-iris"
requires-python = ">=3.10"

[project.urls]
Code = "https://github.com/SciTools/iris"
Discussions = "https://github.com/SciTools/iris/discussions"
Documentation = "https://scitools-iris.readthedocs.io/en/stable/"
Issues = "https://github.com/SciTools/iris/issues"

[tool.ruff]
# Exclude the following, in addition to the standard set of exclusions.
# https://docs.astral.sh/ruff/settings/#exclude
extend-exclude = [
    "_ff_cross_references.py",
    "um_cf_map.py",
    "docs/src/sphinxext",
    "tools",
]
line-length = 88
src = [
    "benchmarks",
    "lib",
    "docs/src",
]

[tool.ruff.format]
preview = false

[tool.ruff.lint]
ignore = [
    # NOTE: Non-permanent exclusions should be added to the ".ruff.toml" file.

    # flake8-commas (COM)
    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "COM812",  # Trailing comma missing.
    "COM819",  # Trailing comma prohibited.

    # flake8-implicit-str-concat (ISC)
    # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
    # NOTE: This rule may cause conflicts when used with "ruff format".
    "ISC001",  # Implicitly concatenate string literals on one line.
    ]
    preview = false
    select = [
        "ALL",
        # list specific rules to include that is skipped using numpy convention.
        "D212",  # Multi-line docstring summary should start at the first line
    ]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["iris"]

[tool.ruff.lint.per-file-ignores]
# All test scripts

"lib/iris/tests/*.py" = [
    # https://docs.astral.sh/ruff/rules/undocumented-public-module/
    "D100",  # Missing docstring in public module
    "D205",  # 1 blank line required between summary line and description
    "D401",  # 1 First line of docstring should be in imperative mood
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools]
license-files = ["LICENSE"]
zip-safe = false

[tool.setuptools.dynamic]
dependencies = {file = "requirements/pypi-core.txt"}
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools.packages.find]
include = ["iris*"]
where = ["lib"]

[tool.setuptools_scm]
write_to = "lib/iris/_version.py"
local_scheme = "dirty-tag"
version_scheme = "release-branch-semver"

[tool.pytest.ini_options]
addopts = "-ra --durations=25"
required_plugins = "pytest-mock"
testpaths = "lib/iris"

[tool.coverage.run]
branch = true
source = [
    "lib/iris",
]
omit = [
    "lib/iris/tests/*",
    "lib/iris/etc/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.codespell]
ignore-words-list = "alpha-numeric,assertIn,degreee,discontiguities,lazyness,meaned,nin"
skip = "./CODE_OF_CONDUCT.md,_build,*.css,*.ipynb,*.js,*.html,*.svg,*.xml,.git,generated"

[tool.check-manifest]
ignore = [
    "lib/iris/_version.py",
    "lib/iris/std_names.py",
]

[tool.mypy]
# See https://mypy.readthedocs.io/en/stable/config_file.html
# TODO: remove when MyPy fixed (see https://github.com/python/mypy/issues/17166)
disable_error_code = ["call-arg"]
enable_error_code = ["ignore-without-code", "truthy-bool"]
exclude = [
    'noxfile\.py',
    'docs/src/conf\.py'
]
ignore_missing_imports = true
warn_unreachable = true
warn_unused_configs = true

[tool.numpydoc_validation]
checks = [
    "all",  # Enable all numpydoc validation rules, apart from the following:

    # -> Docstring text (summary) should start in the line immediately
    #    after the opening quotes (not in the same line, or leaving a
    #    blank line in between)
    "GL01",  # Permit summary line on same line as docstring opening quotes.

    # -> Closing quotes should be placed in the line after the last text
    #    in the docstring (do not close the quotes in the same line as
    #    the text, or leave a blank line between the last text and the
    #    quotes)
    "GL02",  # Permit a blank line before docstring closing quotes.

    # -> Double line break found; please use only one blank line to
    #    separate sections or paragraphs, and do not leave blank lines
    #    at the end of docstrings
    "GL03",  # Ignoring.

    # -> See Also section not found
    "SA01",  # Not all docstrings require a "See Also" section.

    # -> No extended summary found
    "ES01",  # Not all docstrings require an "Extended Summary" section.

    # -> No examples section found
    "EX01",  # Not all docstrings require an "Examples" section.

    # -> No Yields section found
    "YD01",  # Not all docstrings require a "Yields" section.

    # Temporary checks to ignore, will be reviewed at a later date.
    "GL08",  # The object does not have a docstrings not have a docstring
    "PR01",  # Parameters ... not documented
    "PR02",  # Unknown parameters {....}
    "PR04",  # Parameter "...." has no type
    "PR07",  # Parameter "...." has no description
    "RT01",  # No Returns section found
    "RT03",  # Return value has no description
]
exclude = [
    '\.__eq__$',
    '\.__ne__$',
    '\.__repr__$',
]
